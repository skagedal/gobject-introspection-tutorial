<page xmlns="http://projectmallard.org/1.0/"
      type="guide"
      id="index">
<info>
  <credit type="author copyright">
    <name>Simon Kågedal Reimer</name>
    <email>skagedal@gmail.com</email>
    <years>2013</years>
  </credit>
  <include href="cc-by-sa-3-0.xml" xmlns="http://www.w3.org/2001/XInclude"/>
</info>
<title>GObject Introspection Tutorial</title>
<subtitle>A multilevel Hello World</subtitle>

<!-- 
Mallard questions:
* Is "app" the correct tag for libraries?  <app>GLib</app>

Yelp:
* Can I ignore Emacs auto-save files?
-->

<section id="introduction">
<title>Introduction</title>

<p>This tutorial will show you how to use <app>GObject
Introspection</app> to access to C code from higher level programming
languages.  We will use a simple "Hello World" example that only
depends on GLib and GObject.  You will learn:</p>

<list>
  <item>
    <p>How to write a simple introspectable GObject class</p>
  </item>
  <item>
    <p>How to introspect an executable binary</p>
  </item>
  <item>
    <p>How to embed a JavaScript interpreter in an executable and
    access your GObject</p>
  </item>
  <item>
    <p>How to put your class in a library and access it from various
    interpreted programming languages</p>
  </item>
</list>
</section>

<links type="topic"/>

<section>
<title>About this tutorial</title>

<p>This tutorial was written by Simon Kågedal Reimer.  Some
inspiration was drawn from the guide <link
href="https://live.gnome.org/GObjectIntrospection/FromHereToThere">Creating
a multilevel application with GObject Introspection</link> by Colin
Walters.  Please send any corrections or suggestions to <sys>&lt;<link
href="skagedal@gmail.com">skagedal@gmail.com</link>&gt;</sys>. Merge
requests to the <link
href="https://www.gitorious.org/gobject-introspection-tutorial">git
repositories</link> at Gitorious are also appreciated.</p>

</section>
</page>
