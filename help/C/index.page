<page xmlns="http://projectmallard.org/1.0/"
      type="guide"
      id="index">
<info>
  <credit type="author copyright">
    <name>Simon Kågedal Reimer</name>
    <email>skagedal@gmail.com</email>
    <years>2013</years>
  </credit>
  <include href="cc-by-sa-3-0.xml" xmlns="http://www.w3.org/2001/XInclude"/>
</info>
<title>GObject Introspection Tutorial</title>
<subtitle>A multilevel Hello World</subtitle>

<!-- 
Mallard questions:
* Is "app" the correct tag for libraries?  <app>GLib</app>

Yelp:
* Can I ignore Emacs auto-save files?
-->

<section id="introduction">
<title>Introduction</title>
<p>
This tutorial will show you how to use <app>GObject
Introspection</app> to access to C code from higher level programming
languages.  We'll use a simple "Hello World" example that only depends
on GLib and GObject.  You are assumed to know
the basics on how developing with
GObject works; if not, freshen up with the <link
href="http://library.gnome.org/devel/gobject/unstable/pt02.html">GObject
tutorial</link>. We'll look at how to use your classes from JavaScript
using Gjs and Python using PyGObject.</p>
</section>

<links type="topic"/>

<section>
<title>About this tutorial</title>

<p>This tutorial was written by me, Simon Kågedal Reimer, as a way to
learn about GObject Introspection myself. The text has not yet gotten
a technical review by an expert on the subject, so beware of
inaccuracies. Some inspiration was drawn from the guide <link
href="https://live.gnome.org/GObjectIntrospection/FromHereToThere">Creating
a multilevel application with GObject Introspection</link> by Colin
Walters.</p>

<p>Please send any corrections or suggestions to <sys>&lt;<link
href="skagedal@gmail.com">skagedal@gmail.com</link>&gt;</sys>. Merge
requests to the <link
href="https://www.gitorious.org/gobject-introspection-tutorial">git
repositories</link> at Gitorious are also appreciated.</p>

</section>
</page>
